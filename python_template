#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Python Template

Author: Peter Pakos <peter.pakos@wandisco.com>

Copyright (C) 2017 WANdisco. All rights reserved.
"""

from __future__ import print_function
import os
import sys
import argparse
import fcntl
from config import Config
from logger import get_logger


class Main(object):
    VERSION = '1.0.0'

    def __init__(self):
        if not self._lock_file():
            print('The script is already running, exiting...', file=sys.stderr)
            exit(1)

        self._args = self._parse_args()
        self._log = get_logger(debug=self._args.debug, quiet=self._args.quiet, verbose=self._args.verbose)
        self._log.debug('Initialising...')
        self._msg = Config.MESSAGE

    @staticmethod
    def _lock_file(lock_file='.lock'):
        file_descriptor = os.open(lock_file, os.O_CREAT | os.O_TRUNC | os.O_WRONLY)
        try:
            fcntl.lockf(file_descriptor, fcntl.LOCK_EX | fcntl.LOCK_NB)
        except IOError:
            return False

        return True

    def _parse_args(self):
        parser = argparse.ArgumentParser(description='Python Template', add_help=False)
        parser.add_argument('--version', action='version',
                            version='%s %s' % (os.path.basename(sys.argv[0]), self.VERSION))
        parser.add_argument('--help', action='help', help='show this help message and exit')
        parser.add_argument('--debug', action='store_true', dest='debug', help='debugging mode')
        parser.add_argument('--verbose', action='store_true', dest='verbose', help='verbose logging mode')
        parser.add_argument('--quiet', action='store_true', dest='quiet', help="don't log to console")

        return parser.parse_args()

    def run(self):
        self._log.debug('Starting...')
        self._log.info(self._msg)
        self._log.debug('Finishing...')


if __name__ == '__main__':
    try:
        Main().run()
    except KeyboardInterrupt:
        print('\nTerminating...')
        exit(130)
